# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

# ワークフローの名前を設定します
name: Maven Package

# このワークフローは、新しいリリースが作成されたときにトリガーされます
on:
  release:
    types: [created]

jobs:
  # "build"という名前のジョブを定義します
  build:
    # このジョブは最新のUbuntu環境で実行されます
    runs-on: ubuntu-latest
    permissions:
      # このジョブには、リポジトリの内容を読む権限と、パッケージを書き込む権限があります
      contents: read
      packages: write

    steps:
    # リポジトリのコードをチェックアウトします
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      # JDK 17をセットアップします。これは、Javaのコードをコンパイルするために必要です
      uses: actions/setup-java@v3
      with:
        # 使用するJavaのバージョンを指定します。この場合、バージョン17が指定されています
        java-version: '17'
        # 使用するJavaのディストリビューションを指定します。TemurinはEclipse Foundationが管理するOpenJDKのディストリビューションの一つです
        distribution: 'temurin'
        # Mavenのsettings.xmlファイル内で定義されているサーバーIDを指定します。このIDは、Mavenがパッケージをデプロイするリポジトリを識別するために使用されます
        server-id: github 
        # Mavenのsettings.xmlファイルの場所を指定します。${{ github.workspace }}はGitHub Actionsのワークスペースディレクトリを指します
        settings-path: ${{ github.workspace }} 

    - name: Build with Maven
      # Mavenを使用してプロジェクトをビルドします
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      # 最後に、ビルドしたパッケージをGitHub Packagesに公開します。これには、GitHubのトークンが環境変数として設定されています
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}